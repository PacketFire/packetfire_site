<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ci/cd on Packetfire</title><link>https://packetfire.org/tags/ci/cd/</link><description>Recent content in ci/cd on Packetfire</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://packetfire.org/tags/ci/cd/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a Docker-based Development Environment for Concourse-CI</title><link>https://packetfire.org/post/concourse-dev-environment/</link><pubDate>Sun, 25 Mar 2018 19:57:07 -0400</pubDate><guid>https://packetfire.org/post/concourse-dev-environment/</guid><description>Introduction: Jenkins has predominantly been the bread and butter CI/CD tool for technology organizations, where very few tools have been able to compete with the expressiveness of its Groovy-based DSL and the extensibility of its plugin ecosystem. That being said, its tool API is not very straightforward and its configuration lends itself to eventually becoming a snowflake server on an organization&amp;rsquo;s network. Because of this, I&amp;rsquo;m always looking for new CI/CD tools to play with.</description></item></channel></rss>